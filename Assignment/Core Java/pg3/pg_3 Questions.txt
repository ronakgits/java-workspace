
Page - 3


- Ex. 23

	
	Create a class 
	to print the area of 
	a square and a rectangle. 
	
	The class has two methods
	
		with the 
		same name but 
		different number of parameters. 
	
	The method for printing area of a rectangle 
		has two parameters 
		which are length and breadth 
	
	respectively while the 
	other method for 
	
	printing area of square has 
		one parameter 
		which is side of square.
	



- Ex. 24

	
	Create a class 
	
	with a method 
	
	that prints "This is a parent class" 
	
	and 
	
	its subclass with another method 
	
	that prints "This is child class". 
	
	Now, 
	
	create an object for each of the class 
	and 
	
	call 
	
	1 - method of parent class 
		by object of parent class 
	
	2 - method of child class by object of child class 
	
	3 - method of parent class by object of child class
	



- Ex. 25

	
	Create a class named 'Member' having the following members:

		1. Data members
		2. Name
		3. Age
		4. Phone number
		5. Address
		6. Salary

	It also has a 
	
	method named 'printSalary' 
	
	which prints the salary of the members
	



- Ex. 26

	
	Create a class named 'Rectangle' 
	
	with two data members 'length' and 'breadth' 
	
	and 
	
	two methods to print 
	the area and perimeter 
	of the rectangle respectively. 
	
	Its constructor having parameters 
	for length and breadth 
	
	is used to initialize 
	the length and breadth 
	of the rectangle. 
	
	Let class 'Square' inherit the 'Rectangle' class 
	
	with its constructor having a parameter 
	
	for its side (suppose s) 
	calling the constructor of its parent class 
	as 'super (s, s)'. 
	
	Print the area and perimeter 
	of a rectangle and a square.
	



- Ex. 27

	
	Write a program to 
	
	print the area and perimeter of a triangle 
	
	having sides of 3, 4 and 5 units 
	
	by creating a class named 'Triangle' 
	
	without any parameter in its constructor.
	



- Ex. 28

	
	Print the sum, 
	difference and product of two complex numbers 
	by creating a class named 'Complex' 
	
	with separate methods for each operation 
	whose real and imaginary parts are entered by user.
	



- Ex. 29

	
	Create an abstract class 'Parent' with a method 'message'. 
	
	It has two subclasses 
	each having a method 
	with the same name 'message' 
	
	that prints "This is first subclass" 
	and 
	"This is second subclass" 
	respectively. 
	
	Call the methods 'message' by creating an object for each subclass.
	



- Ex. 30

	
	Create an abstract class 'Bank' 
	with an abstract method 'getBalance'. 
	
	$100, $150 and $200 are deposited in banks A, B and C respectively. 
	
	'BankA', 'BankB' and 'BankC' are subclasses of class 'Bank', 
	
	each having a method named 'getBalance'. 
	
	Call this method by creating an object 
	of each of the 
	three classes.
	


